name: ci-test-snowflake

on:
  workflow_dispatch:
  pull_request_target:
    types:
      - labeled

permissions:
  contents: read


jobs:
  linux:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.event.label.name == 'ci-test-snowflake'
    strategy:
      matrix:
        target: ["x86_64"]
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v4
      - uses: extractions/setup-just@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: download test data
        run: just download-data

      - name: Rust latest
        run: rustup update

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Poetry install
        run: poetry install --with="dev,test" --extras="duckdb snowflake datafusion examples"
        working-directory: ${{ github.workspace }}

      - name: maturin develop
        run: poetry run maturin develop
        working-directory: ${{ github.workspace }}

      - name: start services
        run: docker compose up --build --wait

      - name: poetry pytest
        run: poetry run pytest --import-mode=importlib python/letsql/backends/snowflake -v --cov --cov-report=xml
        working-directory: ${{ github.workspace }}
        env:
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_GH_USER_PASSWORD }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_GH_USER_NAME }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_GH_WAREHOUSE }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_GH_ROLE }}
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_GH_ACCOUNT }}

      - name: Upload coverage reports to Codecov
        if: success()
        continue-on-error: true
        uses: codecov/codecov-action@v4.6.0
        with:
          flags: snowflake
          token: ${{ secrets.CODECOV_TOKEN }}

