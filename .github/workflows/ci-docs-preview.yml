name: Docs Preview

on:
  pull_request_target:
    types:
      - labeled

jobs:
  docs_preview:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}-${{ github.event.label.name }}
      cancel-in-progress: true
    if: github.event.label.name == 'docs-preview'
    steps:
      - uses: actions/create-github-app-token@v1.10.3
        id: generate_token
        with:
          app-id: ${{ secrets.DOCS_BOT_APP_ID }}
          private-key: ${{ secrets.DOCS_BOT_APP_PRIVATE_KEY }}

      - name: reset label
        uses: actions-ecosystem/action-remove-labels@v1
        with:
          labels: docs-preview
          github_token: ${{ steps.generate_token.outputs.token }}

      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: extractions/setup-just@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: download test data
        run: just download-data

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Rust latest
        run: rustup update

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Poetry install
        run: poetry install --with="dev,test,docs" --extras="duckdb snowflake datafusion"
        working-directory: ${{ github.workspace }}

      - uses: quarto-dev/quarto-actions/setup@v2
        with:
          version: 1.4.515

      - name: maturin develop
        run: poetry run maturin develop --release
        working-directory: ${{ github.workspace }}

      - name: start services
        run: docker compose up --build --wait

      - name: build docs
        run: just docs-build-all

      - name: install netlify cli
        run: npm install -g netlify-cli

      - name: generate url alias
        id: get_alias
        run: |
          echo "id=pr-${{ github.event.pull_request.number }}-${{ github.event.pull_request.head.sha }}" >> "$GITHUB_OUTPUT"

      - name: build and push quarto docs to preview url
        run: netlify deploy --dir=docs/_site --alias="${{ steps.get_alias.outputs.id }}"
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

      - name: create preview link comment
        if: success()
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ steps.generate_token.outputs.token }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Docs preview: https://${{ steps.get_alias.outputs.id }}--letsql-docs.netlify.app